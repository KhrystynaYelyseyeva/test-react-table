{"version":3,"sources":["components/Cell.js","components/columns.js","components/Table.js","App.js","index.js"],"names":["useStyles","makeStyles","expanded","overflow","textOverflow","whiteSpace","collapsed","Cell","text","useState","expandText","setExpandText","showButton","setShowButton","containerRef","useRef","contentRef","useEffect","checkWidth","current","offsetWidth","classes","Grid","container","direction","wrap","justify","alignItems","style","maxWidth","item","ref","className","padding","IconButton","size","onClick","prevState","fontSize","COLUMNS","Header","accessor","cell","value","Table","columns","useMemo","data","MOCK_DATA","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","getCellProps","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"ugiCAQMA,EAAYC,YAAW,CAC3BC,SAAU,CACRC,SAAU,SACVC,aAAc,UACdC,WAAY,UAEdC,UAAW,CACTH,SAAU,SACVC,aAAc,WACdC,WAAY,YAIHE,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACKC,oBAAS,GADd,mBACzBC,EADyB,KACbC,EADa,OAEKF,oBAAS,GAFd,mBAEzBG,EAFyB,KAEbC,EAFa,KAI1BC,EAAeC,mBACfC,EAAaD,mBAEnBE,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,WACjBL,EAAcG,EAAWG,QAAQC,YAAcN,EAAaK,QAAQC,cAOhEC,EAAUrB,IAEhB,OACE,eAACsB,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,KAAK,SACLC,QAAQ,gBACRC,WAAajB,EAAa,WAAa,SACvCkB,MAAO,CAACC,SAAU,KANpB,UAQE,cAACP,EAAA,EAAD,CAAMQ,MAAI,EACRC,IAAKjB,EACLkB,UAAWtB,EAAaW,EAAQnB,SAAWmB,EAAQf,UAFrD,SAIE,sBAAMyB,IAAKf,EAAYY,MAAO,CAACK,QAAS,GAAxC,SACIzB,GAAQ,QAGbI,GACC,cAACU,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAACI,EAAA,EAAD,CACEC,KAAK,QACLC,QA3Be,WACvBzB,GAAc,SAAA0B,GAAS,OAAKA,MAwBtB,SAII3B,EAAa,cAAC,IAAD,CAAgB4B,SAAS,UAAa,cAAC,IAAD,CAAgBA,SAAS,kBC/D7EC,EAAU,CACrB,CACEC,OAAQ,iBACRC,SAAU,OACVlC,KAAM,YAAe,IAAZmC,EAAW,EAAXA,KACP,OACE,cAAC,EAAD,CAAMlC,KAAOkC,EAAKC,WCDbC,G,MAAQ,WACnB,IAAMC,EAAUC,mBAAQ,kBAAMP,IAAS,IACjCQ,EAAOD,mBAAQ,kBAAME,IAAW,IAFb,EAUrBC,mBAAS,CACXJ,UACAE,SAPAG,EALuB,EAKvBA,cACAC,EANuB,EAMvBA,kBACAC,EAPuB,EAOvBA,aACAC,EARuB,EAQvBA,KACAC,EATuB,EASvBA,WAMF,OACE,mCACE,kDAAWJ,KAAX,cACE,gCACGE,EAAaG,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,8CAAQA,EAAOC,kBAAf,aACGD,EAAOE,OAAO,wBAMzB,iDAAWV,KAAX,aACGE,EAAKE,KAAI,SAAAO,GAER,OADAR,EAAWQ,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMT,KAAI,SAAAb,GAAI,OACjB,8CAAQA,EAAKuB,gBAAb,aAA8BvB,EAAKmB,OAAO,+BC/B7CK,MARf,WACE,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNmC,IAASN,OACP,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.94d1e25c.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { Grid, IconButton } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavigateBeforeSharp } from '@material-ui/icons';\n\nconst useStyles = makeStyles({\n  expanded: {\n    overflow: 'hidden',\n    textOverflow: 'initial',\n    whiteSpace: 'normal', \n  },\n  collapsed: {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap', \n  },\n});\n\nexport const Cell = ({ text }) => {\n  const [expandText, setExpandText ] = useState(false);\n  const [showButton, setShowButton ] = useState(false);\n\n  const containerRef = useRef();\n  const contentRef = useRef();\n\n  useEffect(() => {\n    checkWidth();\n  }, [])\n  \n  const checkWidth = () => {\n    setShowButton(contentRef.current.offsetWidth > containerRef.current.offsetWidth);\n  }\n\n  const toggleVisibility = () => {\n    setExpandText(prevState => !prevState)\n  }\n\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      direction='row'\n      wrap='nowrap'\n      justify='space-between'\n      alignItems={ expandText ? 'flex-end' : 'center' }\n      style={{maxWidth: 150}}\n    >\n      <Grid item\n        ref={containerRef}\n        className={expandText ? classes.expanded : classes.collapsed}\n      >\n        <span ref={contentRef} style={{padding: 8}}>\n          { text || \" \" }\n        </span>\n      </Grid>\n      {showButton && (\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={toggleVisibility}\n          >\n            { expandText ? <ExpandLessIcon fontSize='small' /> : <ExpandMoreIcon fontSize='small' />}\n          </IconButton>\n        </Grid>\n        )\n      }\n    </Grid>\n  )\n}","import { Cell } from \"./Cell\";\n\nexport const COLUMNS = [\n  {\n    Header: '- custom CSS -',\n    accessor: 'text',\n    Cell: ({ cell }) => {\n      return (\n        <Cell text={ cell.value } />\n      )\n    }\n  },\n]\n","import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from '../api/MOCK_DATA.json'\nimport { COLUMNS } from './columns'\n\nimport \"./Table.css\"\n\nexport const Table = () => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  })\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </>\n  )\n}","import {Table} from \"./components/Table\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}