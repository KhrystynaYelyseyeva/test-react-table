{"version":3,"sources":["components/Cell.js","components/columns.js","components/Table.js","App.js","index.js"],"names":["Cell","text","useState","expandText","setExpandText","showButton","setShowButton","containerRef","useRef","contentRef","useEffect","checkWidth","current","offsetHeight","Grid","container","style","display","item","maxWidth","height","overflow","ref","alignSelf","onClick","prevState","backgroundColor","border","COLUMNS","Header","accessor","cell","value","Table","columns","useMemo","data","MOCK_DATA","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","getCellProps","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"s/hCAOaA,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACKC,oBAAS,GADd,mBACzBC,EADyB,KACbC,EADa,OAEKF,oBAAS,GAFd,mBAEzBG,EAFyB,KAEbC,EAFa,KAG1BC,EAAeC,mBACfC,EAAaD,mBAEnBE,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAa,WACjBL,EAAcG,EAAWG,QAAQC,aAAeN,EAAaK,QAAQC,eAOvE,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAO,CAACC,QAAQ,QAAhC,UACE,cAACH,EAAA,EAAD,CACEI,MAAI,EACJF,MAAO,CACLG,SAAU,QACVC,OAAQjB,EAAa,OAAS,OAC9BkB,SAAUlB,EAAa,UAAY,UAErCmB,IAAKf,EAPP,SASE,sBAAMe,IAAKb,EAAX,SACGR,MAGJI,GACC,cAACS,EAAA,EAAD,CAAMI,MAAI,EAACF,MAAO,CAACO,UAAW,YAA9B,SACE,wBACEC,QAtBe,WACvBpB,GAAc,SAAAqB,GAAS,OAAKA,MAsBpBT,MAAO,CACLU,gBAAiB,cACjBC,OAAQ,QAJZ,SAOIxB,EAAa,cAAC,IAAD,IAAoB,cAAC,IAAD,YC/ClCyB,EAAU,CACrB,CACEC,OAAQ,iBACRC,SAAU,OACV9B,KAAM,YAAe,IAAZ+B,EAAW,EAAXA,KACP,OACE,cAAC,EAAD,CAAM9B,KAAO8B,EAAKC,WCDbC,G,MAAQ,WACnB,IAAMC,EAAUC,mBAAQ,kBAAMP,IAAS,IACjCQ,EAAOD,mBAAQ,kBAAME,IAAW,IAFb,EAUrBC,mBAAS,CACXJ,UACAE,SAPAG,EALuB,EAKvBA,cACAC,EANuB,EAMvBA,kBACAC,EAPuB,EAOvBA,aACAC,EARuB,EAQvBA,KACAC,EATuB,EASvBA,WAMF,OACE,mCACE,kDAAWJ,KAAX,cACE,gCACGE,EAAaG,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,8CAAQA,EAAOC,kBAAf,aACGD,EAAOE,OAAO,wBAMzB,iDAAWV,KAAX,aACGE,EAAKE,KAAI,SAAAO,GAER,OADAR,EAAWQ,GAET,8CAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMT,KAAI,SAAAb,GAAI,OACjB,8CAAQA,EAAKuB,gBAAb,aAA8BvB,EAAKmB,OAAO,+BC/B7CK,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCDNC,IAASP,OACP,cAAC,IAAMQ,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7781a3cc.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\n\nexport const Cell = ({ text }) => {\n  const [expandText, setExpandText ] = useState(false);\n  const [showButton, setShowButton ] = useState(false);\n  const containerRef = useRef();\n  const contentRef = useRef();\n\n  useEffect(() => {\n    checkWidth();\n  }, [])\n\n  const checkWidth = () => {\n    setShowButton(contentRef.current.offsetHeight > containerRef.current.offsetHeight);\n  }\n\n  const toggleVisibility = () => {\n    setExpandText(prevState => !prevState)\n  }\n\n  return (\n    <Grid container style={{display:'flex'}}>\n      <Grid\n        item\n        style={{\n          maxWidth: '250px',\n          height: expandText ? '100%' : '24px',\n          overflow: expandText ? 'inherit' : 'hidden',\n        }}\n        ref={containerRef}\n      >\n        <span ref={contentRef}>\n          {text}\n        </span>\n      </Grid>\n      {showButton && (\n        <Grid item style={{alignSelf: 'flex-end'}}>\n          <button\n            onClick={toggleVisibility}\n            style={{\n              backgroundColor: 'transparent',\n              border: 'none',\n            }}\n          >\n            { expandText ? <ExpandLessIcon/> : <ExpandMoreIcon/>}\n          </button>\n        </Grid>\n        )\n      }\n    </Grid>\n    // <div style={{display: 'flex'}}>\n    //   <div style={{maxWidth: '250px', maxHeight: '110px', overflow: showText ? 'inherit' : 'hidden'}} ref={containerRef}>\n    //     <span ref={contentRef}>\n    //       primis in faucibus orci luctus et ultrices posuere cubilia curae duis faucibus accumsan odio curabitur convallis duis consequat dui nec nisi volutpat eleifend donec ut dolor morbi vel lectus in quam fringilla\n    //     </span>\n    //   </div>\n    //   {showButton && (\n    //      <Grid item>\n    //        <button onClick={toggleVisibility}>\n    //          { showText ? 'Hide' : '...'}\n    //        </button>\n    //      </Grid>\n    //      )\n    //    }\n    // </div>\n\n  )\n}","import { Cell } from \"./Cell\";\n\nexport const COLUMNS = [\n  {\n    Header: '- custom CSS -',\n    accessor: 'text',\n    Cell: ({ cell }) => {\n      return (\n        <Cell text={ cell.value } />\n      )\n    }\n  },\n]\n","import React, { useMemo } from 'react'\nimport { useTable } from 'react-table'\nimport MOCK_DATA from '../api/MOCK_DATA.json'\nimport { COLUMNS } from './columns'\n\nimport \"./Table.css\"\n\nexport const Table = () => {\n  const columns = useMemo(() => COLUMNS, [])\n  const data = useMemo(() => MOCK_DATA, [])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  })\n\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>\n                  {column.render('Header')}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.map(row => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => (\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                ))}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </>\n  )\n}","import {Table} from \"./components/Table\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}